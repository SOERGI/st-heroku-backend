/*
 * This file is generated by jOOQ.
*/
package com.example.stherokubackend.database.tables;


import com.example.stherokubackend.database.Indexes;
import com.example.stherokubackend.database.Keys;
import com.example.stherokubackend.database.StherokubackendDev;
import com.example.stherokubackend.database.tables.records.ProfileRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Profile extends TableImpl<ProfileRecord> {

    private static final long serialVersionUID = -1045640292;

    /**
     * The reference instance of <code>stherokubackend_dev.profile</code>
     */
    public static final Profile PROFILE = new Profile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProfileRecord> getRecordType() {
        return ProfileRecord.class;
    }

    /**
     * The column <code>stherokubackend_dev.profile.businessName</code>.
     */
    public final TableField<ProfileRecord, String> BUSINESSNAME = createField("businessName", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>stherokubackend_dev.profile.businessLocation</code>.
     */
    public final TableField<ProfileRecord, String> BUSINESSLOCATION = createField("businessLocation", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>stherokubackend_dev.profile.id</code>.
     */
    public final TableField<ProfileRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>stherokubackend_dev.profile.businessCategory</code>.
     */
    public final TableField<ProfileRecord, String> BUSINESSCATEGORY = createField("businessCategory", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>stherokubackend_dev.profile.businessImage</code>.
     */
    public final TableField<ProfileRecord, String> BUSINESSIMAGE = createField("businessImage", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>stherokubackend_dev.profile</code> table reference
     */
    public Profile() {
        this(DSL.name("profile"), null);
    }

    /**
     * Create an aliased <code>stherokubackend_dev.profile</code> table reference
     */
    public Profile(String alias) {
        this(DSL.name(alias), PROFILE);
    }

    /**
     * Create an aliased <code>stherokubackend_dev.profile</code> table reference
     */
    public Profile(Name alias) {
        this(alias, PROFILE);
    }

    private Profile(Name alias, Table<ProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private Profile(Name alias, Table<ProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return StherokubackendDev.STHEROKUBACKEND_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROFILE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProfileRecord> getPrimaryKey() {
        return Keys.PROFILE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProfileRecord>> getKeys() {
        return Arrays.<UniqueKey<ProfileRecord>>asList(Keys.PROFILE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Profile as(String alias) {
        return new Profile(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Profile as(Name alias) {
        return new Profile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Profile rename(String name) {
        return new Profile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Profile rename(Name name) {
        return new Profile(name, null);
    }
}
